buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.30.0'
    id 'eclipse'
    id 'idea'
}

repositories {
    mavenCentral()
}

ext {
    baseVersion = '1.0.1'

    getBranch = {
        return project.findProperty('branch') ?: ''
    }

    getIsTag = {
        return project.findProperty('isTag') ?: ''
    }

    determineProjectVersion = { baseVersion, branch, isTag ->
        projectVersion = baseVersion
        // If we're not on main and we're not tagging, we need to append '-SNAPSHOT' and (optionally) the branch name to the version:
        if (!branch.equals("main") && !isTag.equals("true")) {
            if (!branch.isEmpty()) {
                projectVersion = "${projectVersion}-${branch}"
            }
            projectVersion = "${projectVersion}-SNAPSHOT"
        }
        return projectVersion
    }
}

group = 'com.mabl'
archivesBaseName = 'pac-interpreter'
version = determineProjectVersion(baseVersion, getBranch(), getIsTag())

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

ext {
    graalVersion = '21.3.7'
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'

    // GraalVM dependencies for interpreting PAC scripts:
    implementation group: 'org.graalvm.sdk', name: 'graal-sdk', version: graalVersion
    implementation group: 'org.graalvm.truffle', name: 'truffle-api', version: graalVersion
    implementation group: 'org.graalvm.js', name: 'js', version: graalVersion
    implementation group: 'org.graalvm.regex', name: 'regex', version: graalVersion

    // ICU4J is a GraalVM dependency:
    implementation group: 'com.ibm.icu', name: 'icu4j', version: '73.2'

    // Test deps:
    testImplementation group: 'junit', name: 'junit', version: '4.+'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.+'
    testImplementation group: 'io.undertow', name: 'undertow-core', version: '2.2.26.Final'
}

java {
    withJavadocJar()
    withSourcesJar()
}

ext {
    releasesUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
    snapshotsUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

publishing {
    repositories {
        maven {
            name = 'sonatype'
            credentials(PasswordCredentials)
            url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // The pom properties below are all required for publishing to Maven Central:
            pom {
                name = 'PAC Interpreter'
                description = 'Interpreter for Proxy Auto-Configuration scripts'
                url = 'https://github.com/mablhq/pac-interpreter'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/mablhq/pac-interpreter.git'
                    developerConnection = 'scm:git:ssh://github.com/mablhq/pac-interpreter.git'
                    url = 'https://github.com/mablhq/pac-interpreter'
                }
                developers {
                    developer {
                        name = 'James Baldassari'
                        email = 'james@mabl.com'
                        organization = 'mabl'
                        organizationUrl = 'https://www.mabl.com'
                    }
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/"
    username = System.getenv('ORG_GRADLE_PROJECT_sonatypeUsername') ?: ''
    password = System.getenv('ORG_GRADLE_PROJECT_sonatypePassword') ?: ''
}
